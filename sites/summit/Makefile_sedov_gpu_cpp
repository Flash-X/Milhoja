SHELL=/bin/sh

BASE         = sedov_gpu_cpp
MAKEFILE     = Makefile_sedov_gpu_cpp
BASEDIR      = ../..
INCDIR       = $(BASEDIR)/includes
SRCDIR       = $(BASEDIR)/src
TESTBASEDIR  = $(BASEDIR)/test/Base
SIMDIR       = $(BASEDIR)/simulations/Sedov
AMREXDIR     = $(RUNTIME_DEP_PATH)/pgi_19.9/AMReX_$(NDIM)d
CUDADIR      = $(OLCF_CUDA_ROOT)

# Common files
CXX_HDRS   = \
    $(INCDIR)/FArray1D.h \
    $(INCDIR)/FArray2D.h \
    $(INCDIR)/FArray3D.h \
    $(INCDIR)/FArray4D.h \
    $(INCDIR)/Tile.h \
    $(INCDIR)/TileAmrex.h \
    $(INCDIR)/TileIter.h \
    $(INCDIR)/TileIterAmrex.h \
    $(INCDIR)/Grid_IntVect.h \
    $(INCDIR)/Grid_RealVect.h \
    $(INCDIR)/Grid.h \
    $(INCDIR)/GridAmrex.h \
    $(INCDIR)/Grid_AmrCoreFlash.h \
    $(INCDIR)/actionRoutine.h \
    $(INCDIR)/OrchestrationLogger.h \
    $(INCDIR)/ThreadTeamModes.h \
    $(INCDIR)/ThreadTeamDataType.h \
    $(INCDIR)/ThreadTeam.h \
    $(INCDIR)/ThreadTeamState.h \
    $(INCDIR)/ThreadTeamIdle.h \
    $(INCDIR)/ThreadTeamTerminating.h \
    $(INCDIR)/ThreadTeamRunningOpen.h \
    $(INCDIR)/ThreadTeamRunningClosed.h \
    $(INCDIR)/ThreadTeamRunningNoMoreWork.h \
    $(INCDIR)/DataItem.h \
    $(INCDIR)/DataPacket.h \
    $(INCDIR)/RuntimeElement.h \
    $(INCDIR)/RuntimeAction.h \
    $(INCDIR)/ActionBundle.h \
    $(INCDIR)/MoverUnpacker.h \
    $(INCDIR)/Stream.h \
    $(INCDIR)/StreamManager.h \
    $(INCDIR)/Runtime.h \
    $(TESTBASEDIR)/errorEstBlank.h \
    $(SIMDIR)/constants.h \
    $(SIMDIR)/Flash.h \
    $(SIMDIR)/Io.h \
    $(SIMDIR)/Eos.h \
    $(SIMDIR)/Hydro.h \
    $(SIMDIR)/Driver.h \
    $(SIMDIR)/Simulation.h \
    $(SIMDIR)/Orchestration.h
CU_HDRS   = \
    $(INCDIR)/CudaGpuEnvironment.h \
    $(INCDIR)/CudaDataPacket.h \
    $(INCDIR)/CudaStreamManager.h \
    $(INCDIR)/CudaMemoryManager.h
SRCS       = \
    $(SRCDIR)/RuntimeElement.cpp \
    $(SRCDIR)/ThreadTeam.cpp \
    $(SRCDIR)/ThreadTeamIdle.cpp \
    $(SRCDIR)/ThreadTeamTerminating.cpp \
    $(SRCDIR)/ThreadTeamRunningOpen.cpp \
    $(SRCDIR)/ThreadTeamRunningClosed.cpp \
    $(SRCDIR)/ThreadTeamRunningNoMoreWork.cpp \
    $(SRCDIR)/FArray1D.cpp \
    $(SRCDIR)/FArray2D.cpp \
    $(SRCDIR)/FArray3D.cpp \
    $(SRCDIR)/FArray4D.cpp \
    $(SRCDIR)/Tile.cpp \
    $(SRCDIR)/TileAmrex.cpp \
    $(SRCDIR)/Grid_IntVect.cpp \
    $(SRCDIR)/Grid_RealVect.cpp \
    $(SRCDIR)/DataPacket.cpp \
    $(SRCDIR)/Grid.cpp \
    $(SRCDIR)/GridAmrex.cpp \
    $(SRCDIR)/Grid_AmrCoreFlash.cpp \
    $(SRCDIR)/OrchestrationLogger.cpp \
    $(SRCDIR)/MoverUnpacker.cpp \
    $(SRCDIR)/StreamManager.cpp \
    $(SRCDIR)/Runtime.cpp \
    $(TESTBASEDIR)/errorEstBlank.cpp \
    $(SIMDIR)/sim_setInitialConditions.cpp \
    $(SIMDIR)/Simulation_setInitialConditions_tile_cpu.cpp \
    $(SIMDIR)/hy_computeSoundSpeedHll_oacc_summit.cpp \
    $(SIMDIR)/hy_computeFluxesHll_X_oacc_summit.cpp \
    $(SIMDIR)/hy_computeFluxesHll_Y_oacc_summit.cpp \
    $(SIMDIR)/hy_computeFluxesHll_Z_oacc_summit.cpp \
    $(SIMDIR)/hy_scaleSolutionHll_oacc_summit.cpp \
    $(SIMDIR)/hy_updateSolutionHll_FlX_oacc_summit.cpp \
    $(SIMDIR)/hy_updateSolutionHll_FlY_oacc_summit.cpp \
    $(SIMDIR)/hy_updateSolutionHll_FlZ_oacc_summit.cpp \
    $(SIMDIR)/hy_rescaleSolutionHll_oacc_summit.cpp \
    $(SIMDIR)/hy_computeEintHll_oacc_summit.cpp \
    $(SIMDIR)/hy_updateDensityHll_oacc_summit.cpp \
    $(SIMDIR)/hy_updateVelxHll_oacc_summit.cpp \
    $(SIMDIR)/hy_updateVelyHll_oacc_summit.cpp \
    $(SIMDIR)/hy_updateVelzHll_oacc_summit.cpp \
    $(SIMDIR)/hy_updateEnergyHll_oacc_summit.cpp \
    $(SIMDIR)/hy_updateSolutionHll_oacc_summit.cpp \
    $(SIMDIR)/Hydro_advanceSolutionHll_packet_oacc_summit_1.cpp \
    $(SIMDIR)/Hydro_advanceSolutionHll_packet_oacc_summit_2.cpp \
    $(SIMDIR)/Hydro_advanceSolutionHll_packet_oacc_summit_3.cpp \
    $(SIMDIR)/Eos_idealGammaDensIe.cpp \
    $(SIMDIR)/Eos_idealGammaDensIe_oacc_summit.cpp \
    $(SIMDIR)/Eos_idealGammaDensIe_packet_oacc_summit.cpp \
    $(SIMDIR)/Io.cpp \
    $(SIMDIR)/Io_computeIntegralQuantitiesByBlock_tile_cpu.cpp \
    $(SIMDIR)/Driver_data.cpp \
    $(SIMDIR)/sedov_gpu.cpp 
CU_SRCS       = \
    $(SRCDIR)/CudaGpuEnvironment.cu \
    $(SRCDIR)/CudaDataPacket.cu \
    $(SRCDIR)/CudaStreamManager.cu \
    $(SRCDIR)/CudaMemoryManager.cu

OBJS      = $(addsuffix .o, $(basename $(SRCS)))
CUOBJS    = $(addsuffix .o, $(basename $(CU_SRCS)))
COMMAND   =  $(BASE).x

OACC_FLAGS = -acc -ta=tesla:cc70,cuda10.1,ptxinfo -Minfo=accel

CXX       = mpicxx
CXXFLAGS  = -O3 -std=c++11 -m64 -I$(INCDIR) -I$(TESTBASEDIR) -I$(SIMDIR) -I$(AMREXDIR)/include $(OACC_FLAGS) -DUSE_CUDA_BACKEND -DENABLE_OPENACC_OFFLOAD -DGRID_LOG
CXXWARNS  =

CU        = nvcc
CUFLAGS   = -ccbin=pgc++ -O3 -std=c++11 -m64 -gencode arch=compute_70,code=sm_70 -I$(INCDIR) -I$(SIMDIR) -I$(TESTBASEDIR) -I$(AMREXDIR)/include -DUSE_CUDA_BACKEND -DENABLE_OPENACC_OFFLOAD -DGRID_LOG
CUWARNS   =

LIBS      = -lpthread -lstdc++ -pgf90libs -lcudart -lamrex
LDFLAGS   = -L$(AMREXDIR)/lib -L$(CUDADIR)/lib64

all:    $(COMMAND)

.SUFFIXES:
.SUFFIXES: .o .cpp .cu

$(COMMAND): $(OBJS) $(CUOBJS) $(MAKEFILE) 
	$(CXX) -o $(COMMAND) $(OBJS) $(CUOBJS) $(LDFLAGS) $(LIBS) $(OACC_FLAGS)

.cpp.o: $(CXX_HDRS) $(MAKEFILE)
	$(CXX) -c $(CXXFLAGS) $(CXXWARNS) -o $@ $<

.cu.o: $(CU_HDRS) $(MAKEFILE)
	$(CU) -c $(CUFLAGS) $(CUWARNS) -o $@ $<

clean:
	/bin/rm -f $(COMMAND)
	/bin/rm -f *.mod
	/bin/rm -f $(SRCDIR)/*.o
	/bin/rm -f $(SIMDIR)/*.o
	/bin/rm -f $(TESTBASEDIR)/*.o

