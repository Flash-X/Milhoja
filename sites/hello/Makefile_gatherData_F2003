SHELL=/bin/sh

BASE     = gather_data_F2003
MAKEFILE = Makefile_gatherData_F2003
BASEDIR  = ../..
INCDIR   = $(BASEDIR)/includes
SRCDIR   = $(BASEDIR)/src
TESTDIR  = $(BASEDIR)/test/GatherDataF2003
AMREXDIR = $(HOME)/local/gcc_6.5.0/AMReX_2D

# Common files
CXX_HDRS   = \
    $(INCDIR)/Grid.h \
    $(INCDIR)/Tile.h \
    $(INCDIR)/runtimeTask.h \
    $(INCDIR)/ThreadTeamModes.h \
    $(INCDIR)/ThreadTeam.h \
    $(INCDIR)/ThreadTeamState.h \
    $(INCDIR)/ThreadTeamIdle.h \
    $(INCDIR)/ThreadTeamTerminating.h \
    $(INCDIR)/ThreadTeamRunningOpen.h \
    $(INCDIR)/ThreadTeamRunningClosed.h \
    $(INCDIR)/ThreadTeamRunningNoMoreWork.h \
    $(INCDIR)/OrchestrationRuntime.h \
    $(TESTDIR)/constants.h
CXX_SRCS       = \
    $(SRCDIR)/Grid.cpp \
    $(SRCDIR)/Tile.cpp \
    $(SRCDIR)/OrchestrationRuntime.cpp \
    $(SRCDIR)/tile_fi.cpp \
    $(SRCDIR)/grid_fi.cpp \
    $(SRCDIR)/orchestration_runtime_fi.cpp
F2003_SRCS       = \
    $(SRCDIR)/tile_mod.F90 \
    $(SRCDIR)/Grid_interface.F90 \
    $(SRCDIR)/Orchestration_interface.F90 \
    $(TESTDIR)/Simulation_interface.F90 \
    $(TESTDIR)/Analysis_interface.F90 \
    $(TESTDIR)/Physics_interface.F90 \
    $(TESTDIR)/Simulation_initBlock.F90 \
    $(SRCDIR)/Grid_data.F90 \
    $(SRCDIR)/Orchestration_data.F90 \
    $(TESTDIR)/Analysis_data.F90 \
    $(TESTDIR)/Physics_data.F90 \
    $(SRCDIR)/Grid_init.F90 \
    $(SRCDIR)/Grid_initDomain.F90 \
    $(SRCDIR)/Grid_getDomainBoundBox.F90 \
    $(SRCDIR)/Grid_getDeltas.F90 \
    $(SRCDIR)/Grid_getCellCoords.F90 \
    $(SRCDIR)/Grid_finalize.F90 \
    $(SRCDIR)/Orchestration_init.F90 \
    $(SRCDIR)/Orchestration_finalize.F90 \
    $(SRCDIR)/Orchestration_executeTasks.F90 \
    $(TESTDIR)/Driver_evolveFlash.F90 \
    $(TESTDIR)/Analysis_computeErrors.F90 \
    $(TESTDIR)/Physics_op1_executeTask1_Tile.F90 \
    $(TESTDIR)/Physics_op1_executeTask2_Tile.F90 \
    $(TESTDIR)/Physics_op1_executeTask3_Tile.F90

OBJS       = $(addsuffix .o, $(basename $(CXX_SRCS)))
MODS       = $(addsuffix .mod, $(basename $(F2003_SRCS)))
COMMAND    =  $(BASE).x

CXX        = mpicxx
CXXFLAGS   = -g -O0 -std=c++11 -I$(INCDIR) -I$(TESTDIR) -I$(AMREXDIR)/include
CXXWARNS   =

F2003      = mpif90
F2003FLAGS = -g -O0 -cpp -std=f2003 -I$(TESTDIR) -I$(AMREXDIR)/include -fdefault-real-8 -fdefault-double-8
F2003WARNS =

LIBS       = -lpthread -lstdc++ -lamrex
LDFLAGS    = -L$(AMREXDIR)/lib
 
ifdef DEBUG
CXXFLAGS := $(CXXFLAGS) -DDEBUG_RUNTIME
endif

all:    $(COMMAND)

.SUFFIXES:
.SUFFIXES: .o .cpp .mod .F90

$(COMMAND): $(OBJS) $(MODS) $(MAKEFILE) 
	$(F2003) -o $(COMMAND) $(OBJS) $(MODS) $(LDFLAGS) $(LIBS)

.cpp.o: $(CXX_HDRS) $(MAKEFILE)
	$(CXX) -c $(CXXFLAGS) $(CXXWARNS) -o $@ $<

# Move buildInfo.inc out so that we just write it once
# Also, find commands that are universal
.F90.mod: $(CXX_SRC) $(CXX_HDRS) $(MAKEFILE)
	@/bin/rm -f $(TESTDIR)/buildInfo.inc
	@printf "character(*), parameter :: PROJECT_GIT_REPO_NAME = \'" >> $(TESTDIR)/buildInfo.inc
	@printf "%s\'\n" `git config --get remote.origin.url` >> $(TESTDIR)/buildInfo.inc

	@printf "character(*), parameter :: PROJECT_GIT_REPO_VER = \'" >> $(TESTDIR)/buildInfo.inc
	@printf "%s\'\n" `git -C $(SRCDIR) describe --always` >> $(TESTDIR)/buildInfo.inc

	@printf "character(*), parameter :: BUILD_DATETIME = \'" >> $(TESTDIR)/buildInfo.inc
	@printf "%s\'\n" `date +"%Y-%m-%dT%H:%M:%S%z"` >> $(TESTDIR)/buildInfo.inc

	@printf "character(*), parameter :: HOSTNAME = \'" >> $(TESTDIR)/buildInfo.inc
	@printf "%s\'\n" `hostname` >> $(TESTDIR)/buildInfo.inc

	@printf "character(*), parameter :: MACHINE_INFO = \'" >> $(TESTDIR)/buildInfo.inc
	@printf "%s\'\n" `$(CXX) -dumpmachine` >> $(TESTDIR)/buildInfo.inc

	@printf "character(*), parameter :: CXX_COMPILER = \'" >> $(TESTDIR)/buildInfo.inc
	@printf "%s\'\n" $(CXX) >> $(TESTDIR)/buildInfo.inc

	@printf "character(*), parameter :: CXX_COMPILER_VERSION = \'" >> $(TESTDIR)/buildInfo.inc
	@printf "%s\'\n" `$(CXX) -dumpversion` >> $(TESTDIR)/buildInfo.inc

	@printf "character(*), parameter :: F2003_COMPILER = \'" >> $(TESTDIR)/buildInfo.inc
	@printf "%s\'\n" $(F2003) >> $(TESTDIR)/buildInfo.inc

	@printf "character(*), parameter :: F2003_COMPILER_VERSION = \'" >> $(TESTDIR)/buildInfo.inc
	@printf "%s\'\n" `$(F2003) -dumpversion` >> $(TESTDIR)/buildInfo.inc

	$(F2003) -c $(F2003FLAGS) $(F2003WARNS) -o $@ $<

clean:
	/bin/rm -f gather_data_F2003.x 
	/bin/rm -f $(SRCDIR)/*.o
	/bin/rm -f $(SRCDIR)/*.mod
	/bin/rm -f $(TESTDIR)/*.o
	/bin/rm -f $(TESTDIR)/buildInfo.inc
	/bin/rm -f $(TESTDIR)/*.mod

