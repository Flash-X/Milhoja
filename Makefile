SHELL=/bin/sh


########################################################
# Makefile flags and defintions

MAKEFILE     = Makefile
MAKEFILES    = $(MAKEFILE) Makefile.site Makefile.base Makefile.test

# Must include site first so BASEDIR is defined.
include Makefile.site
include Makefile.base
include Makefile.test

# TODO define these in a Makefile.setup
BUILDDIR = $(BASEDIR)/build
OBJDIR = $(BUILDDIR)/obj

#TODO: how to deal with this compiler specific flag
CXXFLAGS_STD = -std=c++11
LDFLAGS_STD  = -lpthread -lstdc++

# TODO Include these for only if code coverage requested
CXXFLAGS_COV = -fprofile-arcs -ftest-coverage
LDFLAGS_COV  = --coverage

# Combine all compiler and linker flags
CXXFLAGS = $(CXXFLAGS_STD) $(CXXFLAGS_PROD) $(CXXFLAGS_BASE) $(CXXFLAGS_TEST) \
           $(CXXFLAGS_AMREX) $(CXXFLAGS_COV)
LDFLAGS  = $(LDFLAGS_STD) $(LIB_AMREX) $(LDFLAGS_TEST) $(LDFLAGS_COV)

# List of sources, objects, and dependencies
C_SRCS     = $(SRCS_BASE) $(SRCS_TEST)
OBJS_TEMP     = $(addsuffix .o, $(basename $(C_SRCS)))
OBJS     =  $(patsubst $(BASEDIR)/%,$(OBJDIR)/%,$(OBJS_TEMP))
OBJTREE  =  $(sort $(dir $(OBJS)))
DEPS     = $(addsuffix .d, $(basename $(OBJS)))


# TODO: is this needed?
ifdef DEBUG
CXXFLAGS += -DDEBUG_RUNTIME
endif
# TODO replace this with a better verbosity system
CXXFLAGS += -DGRID_LOG

##########################################################
# Makefile commands:

.PHONY: default all clean
default: $(BINARYNAME)
all:     $(BINARYNAME)
test:
	./$(BINARYNAME)


# Main make command depends on making all object files and creating object tree
$(BINARYNAME): $(OBJTREE) $(OBJS) $(MAKEFILES)
	/bin/rm -f $(OBJDIR)/**/*.gcda
	$(CXXCOMP) -o $(BINARYNAME) $(OBJS) $(LDFLAGS)

# -MMD generates a dependecy list for each file as a side effect
$(OBJDIR)/%.o: $(BASEDIR)/%.cpp  $(MAKEFILES)
	$(CXXCOMP) -MMD -c $(CXXFLAGS) $(CXXWARNS) -o $@ $<

# Make directories in the object tree
$(OBJTREE):
	mkdir -p $@

# TODO: Only do if code coverage requested, fail if test not run
.PHONY: default all clean coverage
coverage:
	$(LCOV) -o lcov_temp.info -c -d $(OBJDIR)
	$(GENHTML)  -o Coverage_Report lcov_temp.info

clean:
	/bin/rm -f $(BINARYNAME)
	/bin/rm -f *.log
	/bin/rm -f -r $(OBJDIR)
	/bin/rm -f lcov_temp.info


# Include dependencies generated by gcc
-include $(DEPS)

